class Solution
{
  public:
  bool ispossible(int arr[],int n,int k,long long mid){
        int paintercount = 1;
        long long timesum = 0;
        for(int i=0; i<n; i++){
            if(timesum + arr[i] <= mid){
                timesum += arr[i];
            }
            else{
                paintercount++;
                if(paintercount>k || arr[i] > mid){
                    return false;
                }
                timesum = arr[i];
            }
        }
        return true;
    }
    long long minTime(int arr[], int n, int k)
    {
        // code here
        // return minimum time
        long long st = 0;
        long long sum = 0;
        for(int i=0;i<n;i++){
            sum += arr[i];
        }
        long long en = sum ,ans = -1;
        long long mid = st + (en - st)/2;
        while(st<=en){
            if(ispossible(arr,n,k,mid)){
                ans = mid;
                en = mid - 1;
            }
            else{
                st = mid + 1;
            }
            mid = st + (en - st)/2;
        }
        return ans;
    }
};
