// { Driver Code Starts
// Initial template for C++

#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function template in C++

class Solution 
{
    public:
    //Function to find minimum number of pages.
    bool isPossibleSol(int arr[],int n, int m,int mid){
        int student =1;
        int page=0;
        int n1=n;
        for(int i=0; i<n1; i++ ){
            if(arr[i]+page<=mid){
                page+=arr[i];
            }
            else{
                student++;
                if(student>m || arr[i]>mid){
                    return false;
                }
                page=arr[i];
            }
            if(student>m){
                return false;
            }
        }
        return true;
    }
    int findPages(int arr[], int N, int M) 
    {
        int start=0;
        int sum=0;
        for(int i=0; i<N; i++){
            sum+=arr[i];
        }
        int ans=-1;
        int end=sum;
        int mid= start + (end-start)/2;
        while(start<=end){
            if(isPossibleSol(arr,N,M,mid)){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
             mid= start + (end-start)/2;
        }
        return ans;
    }
};

// { Driver Code Starts.

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}
  // } Driver Code Ends
